{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,KAAMJ,SAASC,cAAc,UAG/B,SAASI,EAAcC,EAAUP,EAAOG,GACtC,IAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUP,UAEpBa,EAAO,CAAEN,WAAUP,S,GAEpBA,GACHe,aAAY,WACNP,EACFI,EAAQ,CAAEL,WAAUP,UAEpBa,EAAO,CAAEN,WAAUP,S,GAEpBA,EAAQG,E,IAIfJ,EAAKM,KAAKW,iBAAiB,UAAU,SAAAC,GACnCA,EAAEC,iBAKF,IAJA,IAAMC,EAAQC,OAAOrB,EAAKC,MAAMqB,OAC1BlB,EAAOiB,OAAOrB,EAAKI,KAAKkB,OACxBjB,EAASgB,OAAOrB,EAAKK,OAAOiB,OAEzBC,EAAI,EAAGA,EAAIlB,EAAQkB,GAAK,EAC/BhB,EAAcgB,EAAI,EAAGH,EAAQhB,EAAOmB,EAAGnB,GACpCoB,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUP,EAAKwB,EAALxB,MACjByB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUP,EAAKwB,EAALxB,MAClByB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay, step) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay + step);\n  });\n}\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  const delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + step * i, step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","setInterval","addEventListener","e","preventDefault","delay1","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.45be6ead.js.map"}